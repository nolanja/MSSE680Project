@model NewCustomerIntegration.Domain.Models.Organization

@{
    ViewBag.Title = "Create New Organization";
}

<h2>Create Organization</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Organization</legend>

        <div class="editor-label">
            @Html.Label("Organization Code")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OrganizationCode)
            @Html.ValidationMessageFor(model => model.OrganizationCode)
        </div>

        <div class="editor-label">
            @Html.Label("Organization Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OrganizationName)
            @Html.ValidationMessageFor(model => model.OrganizationName)
        </div>

        <div class="editor-label">
            @Html.Label("Phone Number")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PhoneNumber)
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>

        <div class="editor-label">
            @Html.Label("Fax Number")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FaxNumber)
            @Html.ValidationMessageFor(model => model.FaxNumber)
        </div>

        <div class="editor-label">
            @Html.Label("Parent Oganization Code")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ParentOrganizationCode)
            @Html.ValidationMessageFor(model => model.ParentOrganizationCode)
        </div>

        <div class="editor-label">
            @Html.Label("Model Theme")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Theme)
            @Html.ValidationMessageFor(model => model.Theme)
        </div>

        <div class="editor-label">
            @Html.Label("Model Skin")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Skin)
            @Html.ValidationMessageFor(model => model.Skin)
        </div>

        <div class="editor-label">
            @Html.Label("Active")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Active)
            @Html.ValidationMessageFor(model => model.Active)
        </div>

        <div class="editor-label">
            @Html.Label("Deleted")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DELETED)
            @Html.ValidationMessageFor(model => model.DELETED)
        </div>

        <div class="editor-label">
            @Html.Label("Date Created")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreatedDateTime)
            @Html.ValidationMessageFor(model => model.CreatedDateTime)
        </div>

        <div class="editor-label">
            @Html.Label("Created By")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreatedBy)
            @Html.ValidationMessageFor(model => model.CreatedBy)
        </div>

        <div class="editor-label">
            @Html.Label("Date Modified")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ModifiedDateTime)
            @Html.ValidationMessageFor(model => model.ModifiedDateTime)
        </div>

        <div class="editor-label">
            @Html.Label("Modified By")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ModifiedBy)
            @Html.ValidationMessageFor(model => model.ModifiedBy)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
